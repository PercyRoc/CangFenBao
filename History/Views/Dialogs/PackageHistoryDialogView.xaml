<UserControl x:Class="History.Views.Dialogs.PackageHistoryDialogView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:viewModels="clr-namespace:History.ViewModels.Dialogs"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance viewModels:PackageHistoryDialogViewModel, IsDesignTimeCreatable=True}"
             prism:ViewModelLocator.AutoWireViewModel="True">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </UserControl.Resources>

    <Grid Margin="15">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- 标题 -->
        <TextBlock Grid.Row="0" Text="Package History Query" FontSize="20" FontWeight="SemiBold" Margin="0,0,0,10"/>
        
        <!-- 过滤区域 -->
        <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0,5,0,10" VerticalAlignment="Center">
            <TextBlock Text="Start Date:" VerticalAlignment="Center" Margin="0,0,5,0"/>
            <DatePicker SelectedDate="{Binding StartDate}" Width="150" VerticalAlignment="Center" Margin="0,0,10,0"/>

            <TextBlock Text="End Date:" VerticalAlignment="Center" Margin="0,0,5,0"/>
            <DatePicker SelectedDate="{Binding EndDate}" Width="150" VerticalAlignment="Center" Margin="0,0,10,0"/>

            <TextBlock Text="Barcode:" VerticalAlignment="Center" Margin="10,0,5,0"/>
            <TextBox Text="{Binding BarcodeFilter, UpdateSourceTrigger=PropertyChanged}" Width="200" VerticalAlignment="Center" Margin="0,0,10,0" hc:InfoElement.Placeholder="Enter barcode to filter"/>

            <Button Content="Search" Command="{Binding SearchCommand}" Padding="10,5" VerticalAlignment="Center" MinWidth="80"/>
        </StackPanel>

        <!-- 数据表格 -->
        <ui:DataGrid Grid.Row="2" ItemsSource="{Binding HistoricalPackages}"
                     SelectedItem="{Binding SelectedPackage}"
                     AutoGenerateColumns="False" IsReadOnly="True"
                     CanUserAddRows="False" CanUserDeleteRows="False"
                     SelectionMode="Single" GridLinesVisibility="Vertical"
                     HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <ui:DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding HasError}" Value="True">
                            <Setter Property="Background" Value="LightCoral"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ui:DataGrid.RowStyle>
            <ui:DataGrid.Columns>
                <DataGridTextColumn Header="No." Binding="{Binding Index}" Width="Auto" Visibility="{Binding IsIndexColVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTextColumn Header="Barcode" Binding="{Binding Barcode}" Width="Auto" Visibility="{Binding IsBarcodeColVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTextColumn Header="Create Time" Binding="{Binding CreateTime, StringFormat=\'yyyy-MM-dd HH:mm:ss\'}" Width="Auto" Visibility="{Binding IsCreateTimeColVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTextColumn Header="Status" Binding="{Binding StatusDisplay}" Width="Auto" Visibility="{Binding IsStatusDisplayColVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Foreground" Value="White" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Status}" Value="Success">
                                    <Setter Property="Background" Value="DodgerBlue" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="Failed">
                                    <Setter Property="Background" Value="Red" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="Error">
                                    <Setter Property="Background" Value="Red" />
                                </DataTrigger>
                                <!-- Add other statuses here if they need specific colors or fall into a default -->
                                <!-- Default for other non-Success/Failed/Error (if any) -->
                                <DataTrigger Binding="{Binding Status}" Value="Unknown">
                                     <Setter Property="Background" Value="OrangeRed" />
                                </DataTrigger>
                                 <DataTrigger Binding="{Binding Status}" Value="Created">
                                     <Setter Property="Background" Value="Gray" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Weight(kg)" Binding="{Binding Weight, StringFormat={}{0:F2}}" Width="Auto" Visibility="{Binding IsWeightColVisible, Converter={StaticResource BooleanToVisibilityConverter}}"></DataGridTextColumn>
                <DataGridTextColumn Header="Chute No." Binding="{Binding ChuteNumber}" Width="Auto" Visibility="{Binding IsChuteNumberColVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTextColumn Header="Length(cm)" Binding="{Binding Length, StringFormat={}{0:F1}}" Width="Auto" Visibility="{Binding IsLengthColVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTextColumn Header="Width(cm)" Binding="{Binding Width, StringFormat={}{0:F1}}" Width="Auto" Visibility="{Binding IsWidthColVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTextColumn Header="Height(cm)" Binding="{Binding Height, StringFormat={}{0:F1}}" Width="Auto" Visibility="{Binding IsHeightColVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTextColumn Header="Pallet Name" Binding="{Binding PalletName}" Width="Auto" Visibility="{Binding IsPalletNameColVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <StackPanel>
                                        <TextBlock Text="{Binding PalletName, StringFormat=Pallet: {0}}" FontWeight="Bold" Margin="0,0,0,5" />
                                        <TextBlock Text="{Binding PalletWeight, StringFormat=Weight: {0:F3} kg}" />
                                        <TextBlock>
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat="Size: {0:F1}×{1:F1}×{2:F1} cm">
                                                    <Binding Path="PalletLength" />
                                                    <Binding Path="PalletWidth" />
                                                    <Binding Path="PalletHeight" />
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </StackPanel>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding PalletName}" Value="">
                                    <Setter Property="ToolTip" Value="{x:Null}" /> <!-- No tooltip for empty pallet name -->
                                </DataTrigger>
                                <DataTrigger Binding="{Binding PalletName}" Value="{x:Null}">
                                    <Setter Property="ToolTip" Value="{x:Null}" /> <!-- No tooltip for null pallet name -->
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Pallet Weight(kg)" Binding="{Binding PalletWeight, StringFormat={}{0:F2}}" Width="Auto" Visibility="{Binding IsPalletWeightColVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTemplateColumn Header="Image" Width="Auto" Visibility="{Binding IsImageColVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="View"
                                    Command="{Binding DataContext.ViewImageCommand, RelativeSource={RelativeSource AncestorType=ui:DataGrid}}"
                                    CommandParameter="{Binding}"
                                    Padding="5,2"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </ui:DataGrid.Columns>
        </ui:DataGrid>

        <!-- 加载指示器 -->
        <Border Grid.Row="2" Background="#7FDDDDDD" Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}" CornerRadius="5">
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <ProgressBar IsIndeterminate="True" Width="100" Height="15" Margin="0,0,0,5"/>
                <TextBlock Text="Loading data..." FontSize="14"/>
            </StackPanel>
        </Border>

        <!-- Paging Controls -->
        <DockPanel Grid.Row="3" Margin="0,5,0,5" LastChildFill="False" Visibility="Visible">
            <Button DockPanel.Dock="Left" Command="{Binding PreviousPageCommand}" Content="Previous" Style="{StaticResource ButtonDefault}" Margin="0,0,5,0"/>
            <Button DockPanel.Dock="Left" Command="{Binding NextPageCommand}" Content="Next" Style="{StaticResource ButtonDefault}" Margin="0,0,10,0"/>
            
            <TextBlock DockPanel.Dock="Left" Text="{Binding PagingInfo}" VerticalAlignment="Center" Margin="0,0,10,0"/>
            
            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                <TextBlock Text="Page Size:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                <hc:NumericUpDown Value="{Binding PageSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Minimum="10" Maximum="1000" Increment="10" Width="80"/>
            </StackPanel>
        </DockPanel>

        <!-- 底部按钮 -->
        <StackPanel Grid.Row="4" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,10,0,0">
            <Button Content="Export to Excel" Command="{Binding ExportToExcelCommand}" Padding="10,5" MinWidth="100" Margin="0,0,10,0"/>
            <Button Content="Close" Command="{Binding CloseDialogCommand}" Padding="10,5" MinWidth="80"/>
        </StackPanel>

    </Grid>
</UserControl> 